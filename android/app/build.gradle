plugins {
    id "com.android.application"
    id "kotlin-android"
}

android {
    namespace "com.vip.mltrader.v2"
    compileSdk 34

    defaultConfig {
        applicationId "com.vip.mltrader.v2"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0.0"
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            // لا يوجد توقيع هنا (unsigned). أضف signingConfig لاحقًا عند النشر.
        }
        debug {
            debuggable true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }
    packagingOptions {
        resources {
            excludes += ["/META-INF/{AL2.0}", "/META-INF/{LGPL2.1}"]
        }
    }
}

// دمج Flutter عبر flutter.gradle
def flutterProjectRoot = rootProject.projectDir.parentFile.toPath()
def localProps = new Properties()
def localPropsFile = new File(rootProject.projectDir, "local.properties")
if (localPropsFile.exists()) {
    localPropsFile.withReader("UTF-8") { reader -> localProps.load(reader) }
}
def flutterSdkPath = localProps.getProperty("flutter.sdk")
if (flutterSdkPath == null) {
    println("⚠️  flutter.sdk غير مُعرّف في local.properties — يرجى تحديده.")
} else {
    apply from: "$flutterSdkPath/packages/flutter_tools/gradle/flutter.gradle"
    flutter {
        source '../..'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.0"
    implementation "androidx.core:core-ktx:1.13.1"
    implementation "androidx.appcompat:appcompat:1.7.0"
    implementation "com.google.android.material:material:1.12.0"
}
